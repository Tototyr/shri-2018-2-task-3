!function(e){var t={};function r(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,r),i.l=!0,i.exports}r.m=e,r.c=t,r.d=function(e,t,o){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(r.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)r.d(o,i,function(t){return e[t]}.bind(null,i));return o},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=1)}([function(e){e.exports={devices:[{id:"F972B82BA56A70CC579945773B6866FB",name:"Посудомоечная машина",power:950,duration:3,mode:"night"},{id:"C515D887EDBBE669B2FDAC62F571E9E9",name:"Духовка",power:2e3,duration:2,mode:"day"},{id:"02DDD23A85DADDD71198305330CC386D",name:"Холодильник",power:50,duration:24},{id:"1E6276CC231716FE8EE8BC908486D41E",name:"Термостат",power:50,duration:24},{id:"7D9DC84AD110500D284B33C82FE6E85E",name:"Кондиционер",power:850,duration:1}],rates:[{from:7,to:10,value:6.46},{from:10,to:17,value:5.38},{from:17,to:21,value:6.46},{from:21,to:23,value:5.38},{from:23,to:7,value:1.79}],maxPower:2100}},function(e,t,r){"use strict";r.r(t);var o=r(0);class i{constructor(e=0,t=[]){this.total=e,this.data=t}}new class{constructor(e){this.devices=e.devices,this.rates=e.rates,this.maxPower=e.maxPower,this.dailySchedule=[],this.maxDayHour=23,this.createFullDay(),this.fillSchedule(),console.log(this.generalInformation)}get generalInformation(){return{schedule:this.schedule,consumedEnergy:this.consumedEnergy}}get schedule(){let e=[];return this.dailySchedule.map((t,r)=>{const o=t.devices.map(e=>e.id);e[r]=[...o]}),e}get consumedEnergy(){let e={value:0,devices:{}};return this.devices.map(t=>{e.value+=this.truncateNumber(t.consumedEnergy),e.devices[t.id]=this.truncateNumber(t.consumedEnergy)}),e}truncateNumber(e,t=3){return+e.toFixed(t)}createFullDay(){this.rates.map(e=>{const t=e.from>e.to,r=23-(e.from-e.to),o={tick:t?0:e.from,period:e,totalTicks:t?r:e.to};this.createDayRange(o)})}createDayRange(e){let t=e.period.from;for(;e.tick<=e.totalTicks;)t>this.maxDayHour&&(t=0),this.dailySchedule[t]={value:e.period.value,mode:e.period.from>=this.maxDayHour?"night":"day",devices:[],totalPower:0},t++,e.tick++}getRelevantPeriod(e){return e.mode?this.dailySchedule.filter(t=>t.mode===e.mode):this.dailySchedule}fillSchedule(){this.devices.map(e=>{e.consumedEnergy=0;const t=this.getRelevantPeriod(e),r=this.createPairs(t,e);this.addDevice(r,e)})}createPairs(e,t){let r=new i;if(t.duration===e.length)return e;for(let o=0;o<e.length;o++){const i=this.createPossiblePeriods(e,o,t);r=this.comparePeriods(i,r)}return r.data}comparePeriods(e,t){return 0===t.total?t=e:0!==e.total&&e.total<t.total&&(t=e),t}createPossiblePeriods(e,t,r){if(!e[t+r.duration])return new i;const o=new i;if(e[t+r.duration].totalPower+r.power<this.maxPower)for(let i=0;i<r.duration;i++)o.total+=e[t+i].value,o.data.push(e[t+i]);return o}addDevice(e,t){e.map(e=>{t.consumedEnergy+=t.power/1e3*e.value,e.totalPower+=t.power,e.devices.push(t)})}}(o)}]);